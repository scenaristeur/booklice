{"version":3,"sources":["webpack:///./node_modules/n3/node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/internal/streams/state.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/internal/streams/async_iterator.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/_stream_transform.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/_stream_writable.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/internal/streams/pipeline.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","webpack:///./node_modules/string_decoder/lib/string_decoder.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/_stream_readable.js","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/queue-microtask/index.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:///./node_modules/n3/node_modules/readable-stream/errors-browser.js","webpack:///./node_modules/n3/node_modules/readable-stream/readable-browser.js","webpack:///./node_modules/util-deprecate/browser.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/internal/streams/from-browser.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/internal/streams/buffer_list.js","webpack:///./node_modules/n3/src/N3Util.js","webpack:///./node_modules/n3/src/N3DataFactory.js","webpack:///./node_modules/n3/src/N3Parser.js","webpack:///./node_modules/n3/src/N3Writer.js","webpack:///./node_modules/n3/src/N3Store.js","webpack:///./node_modules/n3/src/N3StreamParser.js","webpack:///./node_modules/n3/src/N3StreamWriter.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./node_modules/n3/src/N3Lexer.js","webpack:///./node_modules/n3/src/IRIs.js"],"names":["objectKeys","Object","keys","obj","key","push","module","exports","Duplex","Readable","Writable","prototype","v","length","method","options","this","call","allowHalfOpen","readable","writable","once","onend","_writableState","ended","process","nextTick","onEndNT","self","end","defineProperty","enumerable","get","highWaterMark","getBuffer","undefined","_readableState","destroyed","set","value","ERR_INVALID_OPT_VALUE","codes","highWaterMarkFrom","isDuplex","duplexKey","getHighWaterMark","state","hwm","isFinite","Math","floor","name","objectMode","_Object$setPrototypeO","_defineProperty","configurable","finished","kLastResolve","Symbol","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","done","readAndResolve","iter","resolve","data","read","onReadable","wrapForNext","lastPromise","reject","then","AsyncIteratorPrototype","getPrototypeOf","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","next","_this","error","Promise","promise","asyncIterator","_this2","destroy","err","createReadableStreamAsyncIterator","stream","_Object$create","iterator","create","endEmitted","code","on","bind","PassThrough","Transform","_transform","chunk","encoding","cb","_require$codes","ERR_METHOD_NOT_IMPLEMENTED","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","er","ts","_transformState","transforming","writecb","emit","writechunk","rs","reading","needReadable","_read","needTransform","writeencoding","sync","transform","flush","_flush","prefinish","_write","n","_destroy","err2","ctor","superCtor","super_","constructor","TempCtor","CorkedRequest","entry","finish","onCorkedFinish","WritableState","internalUtil","deprecate","Stream","Buffer","OurUint8Array","global","Uint8Array","_uint8ArrayToBuffer","from","_isUint8Array","isBuffer","realHasInstance","destroyImpl","_require","ERR_INVALID_ARG_TYPE","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","errorOrDestroy","nop","writableObjectMode","finalCalled","needDrain","ending","noDecode","decodeStrings","defaultEncoding","writing","corked","bufferProcessing","onwrite","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","emitClose","autoDestroy","bufferedRequestCount","corkedRequestsFree","write","writev","_writev","final","_final","writeAfterEnd","validChunk","decodeChunk","writeOrBuffer","isBuf","newChunk","len","ret","last","callback","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","l","buffer","Array","holder","count","allBuffers","callFinal","need","rState","endWritable","corkReq","current","out","_","hasInstance","Function","object","pipe","cork","uncork","setDefaultEncoding","toLowerCase","indexOf","_undestroy","undestroy","eos","called","apply","arguments","ERR_MISSING_ARGS","noop","isRequest","setHeader","abort","destroyer","closed","fn","to","popCallback","streams","pop","pipeline","_len","_key","isArray","destroys","map","i","forEach","reduce","ERR_STREAM_PREMATURE_CLOSE","args","opts","onlegacyfinish","onfinish","writableEnded","readableEnded","onerror","onclose","onrequest","req","removeListener","isEncoding","_normalizeEncoding","enc","retried","normalizeEncoding","nenc","Error","StringDecoder","nb","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","allocUnsafe","utf8CheckByte","byte","utf8CheckIncomplete","buf","j","utf8CheckExtraBytes","p","r","copy","toString","utf8Text","total","utf8End","c","charCodeAt","slice","ReadableState","EventEmitter","EElistenerCount","emitter","type","listeners","debug","debugUtil","debuglog","BufferList","ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","kProxyEvents","prependListener","event","_events","unshift","readableObjectMode","pipes","pipesCount","flowing","emittedReadable","readableListening","resumeScheduled","paused","awaitDrain","readingMore","decoder","readableAddChunk","addToFront","skipChunkCheck","onEofChunk","chunkInvalid","addChunk","maybeReadMore","emitReadable","isPaused","setEncoding","head","content","clear","MAX_HWM","computeNewHighWaterMark","howMuchToRead","emitReadable_","flow","maybeReadMore_","pipeOnDrain","src","updateReadableListening","listenerCount","resume","nReadingNextTick","resume_","fromList","shift","join","first","concat","consume","endReadable","endReadableNT","wState","xs","x","parseInt","nOrig","doRead","dest","pipeOpts","doEnd","stdout","stderr","endFn","unpipe","onunpipe","unpipeInfo","hasUnpiped","cleanup","ondrain","cleanedUp","ondata","pause","dests","index","splice","ev","res","addListener","removeAllListeners","wrap","_fromList","iterable","copyProps","dst","SafeBuffer","arg","encodingOrOffset","alloc","allocUnsafeSlow","TypeError","size","fill","SlowBuffer","queueMicrotask","window","catch","setTimeout","readableDestroyed","writableDestroyed","emitErrorNT","emitCloseNT","emitErrorAndCloseNT","_inheritsLoose","subClass","superClass","__proto__","createErrorType","message","Base","getMessage","arg1","arg2","arg3","NodeError","_Base","oneOf","expected","thing","String","startsWith","str","search","pos","substr","endsWith","this_len","substring","includes","start","actual","determiner","msg","replace","config","warned","deprecated","console","trace","warn","localStorage","val","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","target","source","getOwnPropertyDescriptors","defineProperties","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_require2","inspect","custom","copyBuffer","offset","tail","s","hasStrings","_getString","_getBuffer","depth","customInspect","isNamedNode","term","termType","isBlankNode","isLiteral","isVariable","isDefaultGraph","inDefaultGraph","quad","graph","prefix","iri","factory","defaultPrefixes","prefixes","processPrefix","cache","local","namedNode","N3DataFactory","rdf","xsd","DEFAULTGRAPH","_blankNodeCounter","escapedLiteral","quadId","DataFactory","blankNode","variable","literal","defaultGraph","triple","Term","id","other","NamedNode","Literal","lastIndexOf","atPos","datatypeString","dtPos","char","string","langString","datatype","language","BlankNode","super","Variable","DefaultGraph","termFromId","endPos","components","exec","unescapeQuotes","termToId","escapeQuotes","subject","predicate","Quad","_subject","_predicate","_object","_graph","toJSON","equals","quoted","languageOrDataType","boolean","Number","isInteger","integer","double","isNaN","blankNodePrefix","_contextStack","_setBase","baseIRI","initDataFactory","format","match","isTurtle","test","isTriG","isNTriples","isNQuads","isN3","_n3Mode","isLineMode","_supportsNamedGraphs","_readPredicateOrNamedGraph","_readPredicate","_supportsQuads","_supportsRDFStar","_resolveRelativeIRI","_blankNodePrefix","_lexer","lexer","N3Lexer","lineMode","n3","_explicitQuantifiers","explicitQuantifiers","fragmentPos","_base","_basePath","_baseRoot","_baseScheme","n3Mode","inverse","_inversePredicate","blankPrefix","_prefixes","quantified","_quantified","context","token","_error","_callback","_sparqlStyle","_readPrefix","_readBaseIRI","_readSubject","_readNamedGraphLabel","quantifier","_resolveIRI","_namedNode","_blankNode","_variable","_saveContext","_readBlankNodeHead","RDF_NIL","_readListItem","_readPunctuation","N3_FORSOME","_quantifier","_readQuantifierList","N3_FORALL","_literalValue","_completeSubjectLiteral","_literal","_readEntity","_getPathReader","ABBREVIATIONS","_readBlankNodeTail","_readObject","_readDataTypeOrLang","_getContextEndReader","_readGraph","_readBlankNodePunctuation","_emit","empty","_restoreContext","_readPredicateAfterBlank","item","list","previousList","stack","parent","RDF_FIRST","_readListItemDataTypeOrLang","RDF_REST","_completeObjectLiteral","_completeLiteral","listItem","completed","_readCallback","inversePredicate","_readFormulaTail","_readInTopContext","_readQuadPunctuation","_prefix","_readPrefixIRI","prefixNode","_prefixCallback","_readDeclarationPunctuation","_readNamedGraphBlankLabel","entity","QUANTIFIERS_GRAPH","_readQuantifierPunctuation","afterPath","_afterPath","_readPath","_readForwardPath","_readBackwardPath","_readRDFStarTail","_quad","contextStack","_readRDFStarTailOrGraph","line","previousToken","_removeDotSegments","result","pathStart","segmentStart","input","quadCallback","prefixCallback","quads","e","t","tokenize","every","parser","rest","nil","forAll","forSome","owl","sameAs","log","implies","escapeAll","escapedCharacters","outputStream","_prefixRegex","_lists","lists","_outputStream","_endStream","output","_lineMode","_writeQuad","_writeQuadLine","_baseIRI","_prefixIRIs","addPrefixes","_inDefaultGraph","_encodeIriOrBlank","_encodeObject","_encodePredicate","_encodeSubject","_prefixMatch","quadToString","_encodeQuad","characterReplacer","prefixMatch","decimal","_encodeLiteral","addQuad","hasPrefixes","IRIlist","prefixList","prefixIRI","RegExp","child","children","contents","elements","_blockedWrite","singleDone","character","_size","_graphs","_id","_ids","_entities","_blankNodeIndex","_factory","addQuads","graphs","subjects","graphKey","subjectKey","predicateKey","index0","key0","key1","key2","index1","index2","existed","name0","name1","name2","array","tmp","varCount","entityKeys","value0","entity0","value1","entity1","values","parts","isString","uniqueIds","graphItem","predicates","objects","freeze","ids","entities","changed","_addToIndex","removeQuad","getQuads","_removeFromIndex","remove","removeMatches","_getGraphs","subjectId","predicateId","objectId","graphId","_findInIndex","_countInIndex","some","results","forSubjects","_uniqueEntities","_loopBy2Keys","_loopByKey1","_loopByKey0","_loop","forPredicates","forObjects","o","forGraphs","g","suggestedName","ignoreErrors","onError","node","tails","toRemove","tailQuad","items","headPos","malformed","objectQuads","subjectQuads","removeQuads","n3Store","assign","_filtered","filtered","add","delete","has","onData","onEnd","parse","uri","writer","_writer","addPrefix","escapeSequence","escapeReplacements","illegalIriChars","lineModeRegExps","_iri","_unescapedIri","_simpleQuotedString","_langcode","_blank","_newline","_comment","_whitespace","_endOfFile","invalidRegExp","_simpleApostropheString","_prefixed","_number","_boolean","_keyword","_sparqlKeyword","_shortPredicates","_comments","comments","_literalClosingPos","inputFinished","_input","outputComments","whiteSpaceMatch","comment","_line","firstChar","matchLength","inconclusive","_previousMarker","_unescape","reportSyntaxError","_parseLiteral","toUpperCase","_syntaxError","invalid","replaced","sequence","unicode4","unicode8","escapedChar","fromCharCode","charCode","opening","openingLength","closingPos","max","backslashCount","raw","lines","split","issue","tokens","_tokenizeToEnd","_pendingBuffer","RDF","XSD","SWAP"],"mappings":"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","file":"js/chunk-e592fad4.2c5f0625.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","// **N3Util** provides N3 utility functions.\n\nimport N3DataFactory from './N3DataFactory';\n\n// Tests whether the given term represents an IRI\nexport function isNamedNode(term) {\n  return !!term && term.termType === 'NamedNode';\n}\n\n// Tests whether the given term represents a blank node\nexport function isBlankNode(term) {\n  return !!term && term.termType === 'BlankNode';\n}\n\n// Tests whether the given term represents a literal\nexport function isLiteral(term) {\n  return !!term && term.termType === 'Literal';\n}\n\n// Tests whether the given term represents a variable\nexport function isVariable(term) {\n  return !!term && term.termType === 'Variable';\n}\n\n// Tests whether the given term represents the default graph\nexport function isDefaultGraph(term) {\n  return !!term && term.termType === 'DefaultGraph';\n}\n\n// Tests whether the given quad is in the default graph\nexport function inDefaultGraph(quad) {\n  return isDefaultGraph(quad.graph);\n}\n\n// Creates a function that prepends the given IRI to a local name\nexport function prefix(iri, factory) {\n  return prefixes({ '': iri }, factory)('');\n}\n\n// Creates a function that allows registering and expanding prefixes\nexport function prefixes(defaultPrefixes, factory) {\n  // Add all of the default prefixes\n  const prefixes = Object.create(null);\n  for (const prefix in defaultPrefixes)\n    processPrefix(prefix, defaultPrefixes[prefix]);\n  // Set the default factory if none was specified\n  factory = factory || N3DataFactory;\n\n  // Registers a new prefix (if an IRI was specified)\n  // or retrieves a function that expands an existing prefix (if no IRI was specified)\n  function processPrefix(prefix, iri) {\n    // Create a new prefix if an IRI is specified or the prefix doesn't exist\n    if (typeof iri === 'string') {\n      // Create a function that expands the prefix\n      const cache = Object.create(null);\n      prefixes[prefix] = local => {\n        return cache[local] || (cache[local] = factory.namedNode(iri + local));\n      };\n    }\n    else if (!(prefix in prefixes)) {\n      throw new Error(`Unknown prefix: ${prefix}`);\n    }\n    return prefixes[prefix];\n  }\n  return processPrefix;\n}\n","// N3.js implementations of the RDF/JS core data types\n// See https://github.com/rdfjs/representation-task-force/blob/master/interface-spec.md\n\nimport namespaces from './IRIs';\nimport { isDefaultGraph } from './N3Util';\nconst { rdf, xsd } = namespaces;\n\n// eslint-disable-next-line prefer-const\nlet DEFAULTGRAPH;\nlet _blankNodeCounter = 0;\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/;\nconst quadId = /^<<(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) ?(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+)?>>$/;\n\n// ## DataFactory singleton\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  variable,\n  literal,\n  defaultGraph,\n  quad,\n  triple: quad,\n};\nexport default DataFactory;\n\n// ## Term constructor\nexport class Term {\n  constructor(id) {\n    this.id = id;\n  }\n\n  // ### The value of this term\n  get value() {\n    return this.id;\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Term)\n      return this.id === other.id;\n    // Otherwise, compare term type and value\n    return !!other && this.termType === other.termType &&\n                      this.value    === other.value;\n  }\n\n  // ### Returns a plain object representation of this term\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n    };\n  }\n}\n\n\n// ## NamedNode constructor\nexport class NamedNode extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'NamedNode';\n  }\n}\n\n// ## Literal constructor\nexport class Literal extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'Literal';\n  }\n\n  // ### The text value of this literal\n  get value() {\n    return this.id.substring(1, this.id.lastIndexOf('\"'));\n  }\n\n  // ### The language of this literal\n  get language() {\n    // Find the last quotation mark (e.g., '\"abc\"@en-us')\n    const id = this.id;\n    let atPos = id.lastIndexOf('\"') + 1;\n    // If \"@\" it follows, return the remaining substring; empty otherwise\n    return atPos < id.length && id[atPos++] === '@' ? id.substr(atPos).toLowerCase() : '';\n  }\n\n  // ### The datatype IRI of this literal\n  get datatype() {\n    return new NamedNode(this.datatypeString);\n  }\n\n  // ### The datatype string of this literal\n  get datatypeString() {\n    // Find the last quotation mark (e.g., '\"abc\"^^http://ex.org/types#t')\n    const id = this.id, dtPos = id.lastIndexOf('\"') + 1;\n    const char = dtPos < id.length ? id[dtPos] : '';\n    // If \"^\" it follows, return the remaining substring\n    return char === '^' ? id.substr(dtPos + 2) :\n           // If \"@\" follows, return rdf:langString; xsd:string otherwise\n           (char !== '@' ? xsd.string : rdf.langString);\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both literals were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Literal)\n      return this.id === other.id;\n    // Otherwise, compare term type, value, language, and datatype\n    return !!other && !!other.datatype &&\n                      this.termType === other.termType &&\n                      this.value    === other.value    &&\n                      this.language === other.language &&\n                      this.datatype.value === other.datatype.value;\n  }\n\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n      language: this.language,\n      datatype: { termType: 'NamedNode', value: this.datatypeString },\n    };\n  }\n}\n\n// ## BlankNode constructor\nexport class BlankNode extends Term {\n  constructor(name) {\n    super(`_:${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'BlankNode';\n  }\n\n  // ### The name of this blank node\n  get value() {\n    return this.id.substr(2);\n  }\n}\n\nexport class Variable extends Term {\n  constructor(name) {\n    super(`?${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Variable';\n  }\n\n  // ### The name of this variable\n  get value() {\n    return this.id.substr(1);\n  }\n}\n\n// ## DefaultGraph constructor\nexport class DefaultGraph extends Term {\n  constructor() {\n    super('');\n    return DEFAULTGRAPH || this;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'DefaultGraph';\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through strict equality;\n    // otherwise, compare term types.\n    return (this === other) || (!!other && (this.termType === other.termType));\n  }\n}\n\n// ## DefaultGraph singleton\nDEFAULTGRAPH = new DefaultGraph();\n\n\n// ### Constructs a term from the given internal string ID\nexport function termFromId(id, factory) {\n  factory = factory || DataFactory;\n\n  // Falsy value or empty string indicate the default graph\n  if (!id)\n    return factory.defaultGraph();\n\n  // Identify the term type based on the first character\n  switch (id[0]) {\n  case '?':\n    return factory.variable(id.substr(1));\n  case '_':\n    return factory.blankNode(id.substr(2));\n  case '\"':\n    // Shortcut for internal literals\n    if (factory === DataFactory)\n      return new Literal(id);\n    // Literal without datatype or language\n    if (id[id.length - 1] === '\"')\n      return factory.literal(id.substr(1, id.length - 2));\n    // Literal with datatype or language\n    const endPos = id.lastIndexOf('\"', id.length - 1);\n    return factory.literal(id.substr(1, endPos - 1),\n            id[endPos + 1] === '@' ? id.substr(endPos + 2)\n                                   : factory.namedNode(id.substr(endPos + 3)));\n  case '<':\n    const components = quadId.exec(id);\n    return factory.quad(\n      termFromId(unescapeQuotes(components[1]), factory),\n      termFromId(unescapeQuotes(components[2]), factory),\n      termFromId(unescapeQuotes(components[3]), factory),\n      components[4] && termFromId(unescapeQuotes(components[4]), factory)\n    );\n  default:\n    return factory.namedNode(id);\n  }\n}\n\n// ### Constructs an internal string ID from the given term or ID string\nexport function termToId(term) {\n  if (typeof term === 'string')\n    return term;\n  if (term instanceof Term && term.termType !== 'Quad')\n    return term.id;\n  if (!term)\n    return DEFAULTGRAPH.id;\n\n  // Term instantiated with another library\n  switch (term.termType) {\n  case 'NamedNode':    return term.value;\n  case 'BlankNode':    return `_:${term.value}`;\n  case 'Variable':     return `?${term.value}`;\n  case 'DefaultGraph': return '';\n  case 'Literal':      return `\"${term.value}\"${\n    term.language ? `@${term.language}` :\n      (term.datatype && term.datatype.value !== xsd.string ? `^^${term.datatype.value}` : '')}`;\n  case 'Quad':\n    // To identify RDF* quad components, we escape quotes by doubling them.\n    // This avoids the overhead of backslash parsing of Turtle-like syntaxes.\n    return `<<${\n        escapeQuotes(termToId(term.subject))\n      } ${\n        escapeQuotes(termToId(term.predicate))\n      } ${\n        escapeQuotes(termToId(term.object))\n      }${\n        (isDefaultGraph(term.graph)) ? '' : ` ${termToId(term.graph)}`\n      }>>`;\n  default: throw new Error(`Unexpected termType: ${term.termType}`);\n  }\n}\n\n\n// ## Quad constructor\nexport class Quad extends Term {\n  constructor(subject, predicate, object, graph) {\n    super('');\n    this._subject   = subject;\n    this._predicate = predicate;\n    this._object    = object;\n    this._graph     = graph || DEFAULTGRAPH;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Quad';\n  }\n\n  get subject() {\n    return this._subject;\n  }\n\n  get predicate() {\n    return this._predicate;\n  }\n\n  get object() {\n    return this._object;\n  }\n\n  get graph() {\n    return this._graph;\n  }\n\n  // ### Returns a plain object representation of this quad\n  toJSON() {\n    return {\n      termType:  this.termType,\n      subject:   this._subject.toJSON(),\n      predicate: this._predicate.toJSON(),\n      object:    this._object.toJSON(),\n      graph:     this._graph.toJSON(),\n    };\n  }\n\n  // ### Returns whether this object represents the same quad as the other\n  equals(other) {\n    return !!other && this._subject.equals(other.subject)     &&\n                      this._predicate.equals(other.predicate) &&\n                      this._object.equals(other.object)       &&\n                      this._graph.equals(other.graph);\n  }\n}\nexport { Quad as Triple };\n\n// ### Escapes the quotes within the given literal\nexport function escapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`);\n}\n\n// ### Unescapes the quotes within the given literal\nexport function unescapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"\"/g, '\"')}`);\n}\n\n// ### Creates an IRI\nfunction namedNode(iri) {\n  return new NamedNode(iri);\n}\n\n// ### Creates a blank node\nfunction blankNode(name) {\n  return new BlankNode(name || `n3-${_blankNodeCounter++}`);\n}\n\n// ### Creates a literal\nfunction literal(value, languageOrDataType) {\n  // Create a language-tagged string\n  if (typeof languageOrDataType === 'string')\n    return new Literal(`\"${value}\"@${languageOrDataType.toLowerCase()}`);\n\n  // Automatically determine datatype for booleans and numbers\n  let datatype = languageOrDataType ? languageOrDataType.value : '';\n  if (datatype === '') {\n    // Convert a boolean\n    if (typeof value === 'boolean')\n      datatype = xsd.boolean;\n    // Convert an integer or double\n    else if (typeof value === 'number') {\n      if (Number.isFinite(value))\n        datatype = Number.isInteger(value) ? xsd.integer : xsd.double;\n      else {\n        datatype = xsd.double;\n        if (!Number.isNaN(value))\n          value = value > 0 ? 'INF' : '-INF';\n      }\n    }\n  }\n\n  // Create a datatyped literal\n  return (datatype === '' || datatype === xsd.string) ?\n    new Literal(`\"${value}\"`) :\n    new Literal(`\"${value}\"^^${datatype}`);\n}\n\n// ### Creates a variable\nfunction variable(name) {\n  return new Variable(name);\n}\n\n// ### Returns the default graph\nfunction defaultGraph() {\n  return DEFAULTGRAPH;\n}\n\n// ### Creates a quad\nfunction quad(subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph);\n}\n","// **N3Parser** parses N3 documents.\nimport N3Lexer from './N3Lexer';\nimport N3DataFactory from './N3DataFactory';\nimport namespaces from './IRIs';\n\nlet blankNodePrefix = 0;\n\n// ## Constructor\nexport default class N3Parser {\n  constructor(options) {\n    this._contextStack = [];\n    this._graph = null;\n\n    // Set the document IRI\n    options = options || {};\n    this._setBase(options.baseIRI);\n    options.factory && initDataFactory(this, options.factory);\n\n    // Set supported features depending on the format\n    const format = (typeof options.format === 'string') ?\n                 options.format.match(/\\w*$/)[0].toLowerCase() : '',\n        isTurtle = /turtle/.test(format), isTriG = /trig/.test(format),\n        isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n        isN3 = this._n3Mode = /n3/.test(format),\n        isLineMode = isNTriples || isNQuads;\n    if (!(this._supportsNamedGraphs = !(isTurtle || isN3)))\n      this._readPredicateOrNamedGraph = this._readPredicate;\n    // Support triples in other graphs\n    this._supportsQuads = !(isTurtle || isTriG || isNTriples || isN3);\n    // Support nesting of triples\n    this._supportsRDFStar = format === '' || /star|\\*$/.test(format);\n    // Disable relative IRIs in N-Triples or N-Quads mode\n    if (isLineMode)\n      this._resolveRelativeIRI = iri => { return null; };\n    this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n                              options.blankNodePrefix.replace(/^(?!_:)/, '_:');\n    this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode, n3: isN3 });\n    // Disable explicit quantifiers by default\n    this._explicitQuantifiers = !!options.explicitQuantifiers;\n  }\n\n  // ## Static class methods\n\n  // ### `_resetBlankNodePrefix` restarts blank node prefix identification\n  static _resetBlankNodePrefix() {\n    blankNodePrefix = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_setBase` sets the base IRI to resolve relative IRIs\n  _setBase(baseIRI) {\n    if (!baseIRI) {\n      this._base = '';\n      this._basePath = '';\n    }\n    else {\n      // Remove fragment if present\n      const fragmentPos = baseIRI.indexOf('#');\n      if (fragmentPos >= 0)\n        baseIRI = baseIRI.substr(0, fragmentPos);\n      // Set base IRI and its components\n      this._base = baseIRI;\n      this._basePath   = baseIRI.indexOf('/') < 0 ? baseIRI :\n                         baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(/^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i);\n      this._baseRoot   = baseIRI[0];\n      this._baseScheme = baseIRI[1];\n    }\n  }\n\n  // ### `_saveContext` stores the current parsing context\n  // when entering a new scope (list, blank node, formula)\n  _saveContext(type, graph, subject, predicate, object) {\n    const n3Mode = this._n3Mode;\n    this._contextStack.push({\n      subject: subject, predicate: predicate, object: object,\n      graph: graph, type: type,\n      inverse: n3Mode ? this._inversePredicate : false,\n      blankPrefix: n3Mode ? this._prefixes._ : '',\n      quantified: n3Mode ? this._quantified : null,\n    });\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      // Every new scope resets the predicate direction\n      this._inversePredicate = false;\n      // In N3, blank nodes are scoped to a formula\n      // (using a dot as separator, as a blank node label cannot start with it)\n      this._prefixes._ = (this._graph ? `${this._graph.id.substr(2)}.` : '.');\n      // Quantifiers are scoped to a formula\n      this._quantified = Object.create(this._quantified);\n    }\n  }\n\n  // ### `_restoreContext` restores the parent context\n  // when leaving a scope (list, blank node, formula)\n  _restoreContext() {\n    const context = this._contextStack.pop(), n3Mode = this._n3Mode;\n    this._subject   = context.subject;\n    this._predicate = context.predicate;\n    this._object    = context.object;\n    this._graph     = context.graph;\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      this._inversePredicate = context.inverse;\n      this._prefixes._ = context.blankPrefix;\n      this._quantified = context.quantified;\n    }\n  }\n\n  // ### `_readInTopContext` reads a token when in the top context\n  _readInTopContext(token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration\n    case 'PREFIX':\n      this._sparqlStyle = true;\n    case '@prefix':\n      return this._readPrefix;\n    // It could be a base declaration\n    case 'BASE':\n      this._sparqlStyle = true;\n    case '@base':\n      return this._readBaseIRI;\n    // It could be a graph\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs)\n        return this._readNamedGraphLabel;\n    // Otherwise, the next token must be a subject\n    default:\n      return this._readSubject(token);\n    }\n  }\n\n  // ### `_readEntity` reads an IRI, prefixed name, blank node, or variable\n  _readEntity(token, quantifier) {\n    let value;\n    switch (token.type) {\n    // Read a relative or absolute IRI\n    case 'IRI':\n    case 'typeIRI':\n      const iri = this._resolveIRI(token.value);\n      if (iri === null)\n        return this._error('Invalid IRI', token);\n      value = this._namedNode(iri);\n      break;\n    // Read a prefixed name\n    case 'type':\n    case 'prefixed':\n      const prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error(`Undefined prefix \"${token.prefix}:\"`, token);\n      value = this._namedNode(prefix + token.value);\n      break;\n    // Read a blank node\n    case 'blank':\n      value = this._blankNode(this._prefixes[token.prefix] + token.value);\n      break;\n    // Read a variable\n    case 'var':\n      value = this._variable(token.value.substr(1));\n      break;\n    // Everything else is not an entity\n    default:\n      return this._error(`Expected entity but got ${token.type}`, token);\n    }\n    // In N3 mode, replace the entity if it is quantified\n    if (!quantifier && this._n3Mode && (value.id in this._quantified))\n      value = this._quantified[value.id];\n    return value;\n  }\n\n  // ### `_readSubject` reads a quad's subject\n  _readSubject(token) {\n    this._predicate = null;\n    switch (token.type) {\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph,\n                        this._subject = this._blankNode(), null, null);\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this.RDF_NIL, null, null);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph,\n                        this._graph = this._blankNode(), null, null);\n      return this._readSubject;\n    case '}':\n       // No subject; the graph in which we are reading is closed instead\n      return this._readPunctuation(token);\n    case '@forSome':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forSome\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORSOME;\n      this._quantifier = this._blankNode;\n      return this._readQuantifierList;\n    case '@forAll':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forAll\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORALL;\n      this._quantifier = this._variable;\n      return this._readQuantifierList;\n    case 'literal':\n      if (!this._n3Mode)\n        return this._error('Unexpected literal', token);\n\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._completeSubjectLiteral;\n      }\n      else\n        this._subject = this._literal(token.value, this._namedNode(token.prefix));\n\n      break;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, null, null, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the subject entity\n      if ((this._subject = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the subject might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._readPredicateOrNamedGraph);\n    }\n\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // ### `_readPredicate` reads a quad's predicate\n  _readPredicate(token) {\n    const type = token.type;\n    switch (type) {\n    case 'inverse':\n      this._inversePredicate = true;\n    case 'abbreviation':\n      this._predicate = this.ABBREVIATIONS[token.value];\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon\n      if (this._predicate === null)\n        return this._error(`Unexpected ${type}`, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Additional semicolons can be safely ignored\n      return this._predicate !== null ? this._readPredicate :\n             this._error('Expected predicate but got ;', token);\n    case 'blank':\n      if (!this._n3Mode)\n        return this._error('Disallowed blank node as predicate', token);\n    default:\n      if ((this._predicate = this._readEntity(token)) === undefined)\n        return;\n    }\n    // The next token must be an object\n    return this._readObject;\n  }\n\n  // ### `_readObject` reads a quad's object\n  _readObject(token) {\n    switch (token.type) {\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._readDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else\n        this._object = this._literal(token.value, this._namedNode(token.prefix));\n      break;\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph, this._subject, this._predicate,\n                        this._subject = this._blankNode());\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this._subject, this._predicate, this.RDF_NIL);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, this._subject, this._predicate, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the object entity\n      if ((this._object = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the object might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._getContextEndReader());\n    }\n    return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateOrNamedGraph` reads a quad's predicate, or a named graph\n  _readPredicateOrNamedGraph(token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  }\n\n  // ### `_readGraph` reads a graph\n  _readGraph(token) {\n    if (token.type !== '{')\n      return this._error(`Expected graph but got ${token.type}`, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  }\n\n  // ### `_readBlankNodeHead` reads the head of a blank node\n  _readBlankNodeHead(token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    else {\n      this._predicate = null;\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readBlankNodeTail` reads the end of a blank node\n  _readBlankNodeTail(token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node quad\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this blank node\n    const empty = this._predicate === null;\n    this._restoreContext();\n    // If the blank node was the subject, continue reading the predicate\n    if (this._object === null)\n      // If the blank node was empty, it could be a named graph label\n      return empty ? this._readPredicateOrNamedGraph : this._readPredicateAfterBlank;\n    // If the blank node was the object, restore previous context and read punctuation\n    else\n      return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateAfterBlank` reads a predicate after an anonymous blank node\n  _readPredicateAfterBlank(token) {\n    switch (token.type) {\n    case '.':\n    case '}':\n      // No predicate is coming if the triple is terminated here\n      this._subject = null;\n      return this._readPunctuation(token);\n    default:\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readListItem` reads items from a list\n  _readListItem(token) {\n    let item = null,                      // The item of the list\n        list = null,                      // The list itself\n        next = this._readListItem;        // The next function to execute\n    const previousList = this._subject,   // The previous list that contains this list\n        stack = this._contextStack,       // The stack of parent contexts\n        parent = stack[stack.length - 1]; // The parent containing the current list\n\n    switch (token.type) {\n    case '[':\n      // Stack the current list quad and start a new quad with a blank node as subject\n      this._saveContext('blank', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST,\n                        this._subject = item = this._blankNode());\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list quad and start a new list\n      this._saveContext('list', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST, this.RDF_NIL);\n      this._subject = null;\n      break;\n    case ')':\n      // Closing the list; restore the parent context\n      this._restoreContext();\n      // If this list is contained within a parent list, return the membership quad here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._emit(this._subject, this._predicate, this._object, this._graph);\n      // Was this list the parent's subject?\n      if (this._predicate === null) {\n        // The next token is the predicate\n        next = this._readPredicate;\n        // No list tail if this was an empty list\n        if (this._subject === this.RDF_NIL)\n          return next;\n      }\n      // The list was in the parent context's object\n      else {\n        next = this._getContextEndReader();\n        // No list tail if this was an empty list\n        if (this._object === this.RDF_NIL)\n          return next;\n      }\n      // Close the list by making the head nil\n      list = this.RDF_NIL;\n      break;\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        next = this._readListItemDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else {\n        item = this._literal(token.value, this._namedNode(token.prefix));\n        next = this._getContextEndReader();\n      }\n      break;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    default:\n      if ((item = this._readEntity(token)) === undefined)\n        return;\n    }\n\n     // Create a new blank node if no item head was assigned yet\n    if (list === null)\n      this._subject = list = this._blankNode();\n\n    // Is this the first element of the list?\n    if (previousList === null) {\n      // This list is either the subject or the object of its parent\n      if (parent.predicate === null)\n        parent.subject = list;\n      else\n        parent.object = list;\n    }\n    else {\n      // Continue the previous list with the current list\n      this._emit(previousList, this.RDF_REST, list, this._graph);\n    }\n    // If an item was read, add it to the list\n    if (item !== null) {\n      // In N3 mode, the item might be a path\n      if (this._n3Mode && (token.type === 'IRI' || token.type === 'prefixed')) {\n        // Create a new context to add the item's path\n        this._saveContext('item', this._graph, list, this.RDF_FIRST, item);\n        this._subject = item, this._predicate = null;\n        // _readPath will restore the context and output the item\n        return this._getPathReader(this._readListItem);\n      }\n      // Output the item\n      this._emit(list, this.RDF_FIRST, item, this._graph);\n    }\n    return next;\n  }\n\n  // ### `_readDataTypeOrLang` reads an _optional_ datatype or language\n  _readDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, false);\n  }\n\n\n  // ### `_readListItemDataTypeOrLang` reads an _optional_ datatype or language in a list\n  _readListItemDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, true);\n  }\n\n  // ### `_completeLiteral` completes a literal with an optional datatype or language\n  _completeLiteral(token) {\n    // Create a simple string literal by default\n    let literal = this._literal(this._literalValue);\n\n    switch (token.type) {\n    // Create a datatyped literal\n    case 'type':\n    case 'typeIRI':\n      const datatype = this._readEntity(token);\n      if (datatype === undefined) return; // No datatype means an error occurred\n      literal = this._literal(this._literalValue, datatype);\n      token = null;\n      break;\n    // Create a language-tagged string\n    case 'langcode':\n      literal = this._literal(this._literalValue, token.value);\n      token = null;\n      break;\n    }\n\n    return { token, literal };\n  }\n\n  // Completes a literal in subject position\n  _completeSubjectLiteral(token) {\n    this._subject = this._completeLiteral(token).literal;\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // Completes a literal in object position\n  _completeObjectLiteral(token, listItem) {\n    const completed = this._completeLiteral(token);\n    if (!completed)\n      return;\n    this._object = completed.literal;\n\n    // If this literal was part of a list, write the item\n    // (we could also check the context stack, but passing in a flag is faster)\n    if (listItem)\n      this._emit(this._subject, this.RDF_FIRST, this._object, this._graph);\n    // If the token was consumed, continue with the rest of the input\n    if (completed.token === null)\n      return this._getContextEndReader();\n    // Otherwise, consume the token now\n    else {\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(completed.token);\n    }\n  }\n\n  // ### `_readFormulaTail` reads the end of a formula\n  _readFormulaTail(token) {\n    if (token.type !== '}')\n      return this._readPunctuation(token);\n\n    // Store the last quad of the formula\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this formula\n    this._restoreContext();\n    // If the formula was the subject, continue reading the predicate.\n    // If the formula was the object, read punctuation.\n    return this._object === null ? this._readPredicate : this._getContextEndReader();\n  }\n\n  // ### `_readPunctuation` reads punctuation between quads or quad parts\n  _readPunctuation(token) {\n    let next, graph = this._graph;\n    const subject = this._subject, inversePredicate = this._inversePredicate;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      if (this._n3Mode)\n        return this._readFormulaTail(token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next\n    case '.':\n      this._subject = null;\n      next = this._contextStack.length ? this._readSubject : this._readInTopContext;\n      if (inversePredicate) this._inversePredicate = false;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (graph = this._readEntity(token)) !== undefined) {\n        next = this._readQuadPunctuation;\n        break;\n      }\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    if (subject !== null) {\n      const predicate = this._predicate, object = this._object;\n      if (!inversePredicate)\n        this._emit(subject, predicate, object,  graph);\n      else\n        this._emit(object,  predicate, subject, graph);\n    }\n    return next;\n  }\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation(token) {\n    let next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    this._emit(this._subject, this._predicate, this._object, this._graph);\n    return next;\n  }\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad\n  _readQuadPunctuation(token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  }\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration\n  _readPrefix(token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  }\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration\n  _readPrefixIRI(token) {\n    if (token.type !== 'IRI')\n      return this._error(`Expected IRI to follow prefix \"${this._prefix}:\"`, token);\n    const prefixNode = this._readEntity(token);\n    this._prefixes[this._prefix] = prefixNode.value;\n    this._prefixCallback(this._prefix, prefixNode);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration\n  _readBaseIRI(token) {\n    const iri = token.type === 'IRI' && this._resolveIRI(token.value);\n    if (!iri)\n      return this._error('Expected valid IRI to follow base declaration', token);\n    this._setBase(iri);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph\n  _readNamedGraphLabel(token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'blank':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  }\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph\n  _readNamedGraphBlankLabel(token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = this._blankNode();\n    return this._readGraph;\n  }\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration\n  _readDeclarationPunctuation(token) {\n    // SPARQL-style declarations don't have punctuation\n    if (this._sparqlStyle) {\n      this._sparqlStyle = false;\n      return this._readInTopContext(token);\n    }\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  }\n\n  // Reads a list of quantified symbols from a @forSome or @forAll statement\n  _readQuantifierList(token) {\n    let entity;\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      if ((entity = this._readEntity(token, true)) !== undefined)\n        break;\n    default:\n      return this._error(`Unexpected ${token.type}`, token);\n    }\n    // Without explicit quantifiers, map entities to a quantified entity\n    if (!this._explicitQuantifiers)\n      this._quantified[entity.id] = this._quantifier(this._blankNode().value);\n    // With explicit quantifiers, output the reified quantifier\n    else {\n      // If this is the first item, start a new quantifier list\n      if (this._subject === null)\n        this._emit(this._graph || this.DEFAULTGRAPH, this._predicate,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Otherwise, continue the previous list\n      else\n        this._emit(this._subject, this.RDF_REST,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Output the list item\n      this._emit(this._subject, this.RDF_FIRST, entity, this.QUANTIFIERS_GRAPH);\n    }\n    return this._readQuantifierPunctuation;\n  }\n\n  // Reads punctuation from a @forSome or @forAll statement\n  _readQuantifierPunctuation(token) {\n    // Read more quantifiers\n    if (token.type === ',')\n      return this._readQuantifierList;\n    // End of the quantifier list\n    else {\n      // With explicit quantifiers, close the quantifier list\n      if (this._explicitQuantifiers) {\n        this._emit(this._subject, this.RDF_REST, this.RDF_NIL, this.QUANTIFIERS_GRAPH);\n        this._subject = null;\n      }\n      // Read a dot\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(token);\n    }\n  }\n\n  // ### `_getPathReader` reads a potential path and then resumes with the given function\n  _getPathReader(afterPath) {\n    this._afterPath = afterPath;\n    return this._readPath;\n  }\n\n  // ### `_readPath` reads a potential path\n  _readPath(token) {\n    switch (token.type) {\n    // Forward path\n    case '!': return this._readForwardPath;\n    // Backward path\n    case '^': return this._readBackwardPath;\n    // Not a path; resume reading where we left off\n    default:\n      const stack = this._contextStack, parent = stack.length && stack[stack.length - 1];\n      // If we were reading a list item, we still need to output it\n      if (parent && parent.type === 'item') {\n        // The list item is the remaining subejct after reading the path\n        const item = this._subject;\n        // Switch back to the context of the list\n        this._restoreContext();\n        // Output the list item\n        this._emit(this._subject, this.RDF_FIRST, item, this._graph);\n      }\n      return this._afterPath(token);\n    }\n  }\n\n  // ### `_readForwardPath` reads a '!' path\n  _readForwardPath(token) {\n    let subject, predicate;\n    const object = this._blankNode();\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's object\n    if (this._predicate === null)\n      subject = this._subject, this._subject = object;\n    // If we were reading an object, replace the subject by the path's object\n    else\n      subject = this._object,  this._object  = object;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readBackwardPath` reads a '^' path\n  _readBackwardPath(token) {\n    const subject = this._blankNode();\n    let predicate, object;\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's subject\n    if (this._predicate === null)\n      object = this._subject, this._subject = subject;\n    // If we were reading an object, replace the subject by the path's subject\n    else\n      object = this._object,  this._object  = subject;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readRDFStarTailOrGraph` reads the graph of a nested RDF* quad or the end of a nested RDF* triple\n  _readRDFStarTailOrGraph(token) {\n    if (token.type !== '>>') {\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (this._graph = this._readEntity(token)) !== undefined)\n        return this._readRDFStarTail;\n      return this._error(`Expected >> to follow \"${this._object.id}\"`, token);\n    }\n    return this._readRDFStarTail(token);\n  }\n\n  // ### `_readRDFStarTail` reads the end of a nested RDF* triple\n  _readRDFStarTail(token) {\n    if (token.type !== '>>')\n      return this._error(`Expected >> but got ${token.type}`, token);\n    // Read the quad and restore the previous context\n    const quad = this._quad(this._subject, this._predicate, this._object,\n      this._graph || this.DEFAULTGRAPH);\n    this._restoreContext();\n    // If the triple was the subject, continue by reading the predicate.\n    if (this._subject === null) {\n      this._subject = quad;\n      return this._readPredicate;\n    }\n    // If the triple was the object, read context end.\n    else {\n      this._object = quad;\n      return this._getContextEndReader();\n    }\n  }\n\n  // ### `_getContextEndReader` gets the next reader function at the end of a context\n  _getContextEndReader() {\n    const contextStack = this._contextStack;\n    if (!contextStack.length)\n      return this._readPunctuation;\n\n    switch (contextStack[contextStack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    case 'formula':\n      return this._readFormulaTail;\n    case '<<':\n      return this._readRDFStarTailOrGraph;\n    }\n  }\n\n  // ### `_emit` sends a quad through the callback\n  _emit(subject, predicate, object, graph) {\n    this._callback(null, this._quad(subject, predicate, object, graph || this.DEFAULTGRAPH));\n  }\n\n  // ### `_error` emits an error message through the callback\n  _error(message, token) {\n    const err = new Error(`${message} on line ${token.line}.`);\n    err.context = {\n      token: token,\n      line: token.line,\n      previousToken: this._lexer.previousToken,\n    };\n    this._callback(err);\n    this._callback = noop;\n  }\n\n  // ### `_resolveIRI` resolves an IRI against the base path\n  _resolveIRI(iri) {\n    return /^[a-z][a-z0-9+.-]*:/i.test(iri) ? iri : this._resolveRelativeIRI(iri);\n  }\n\n  // ### `_resolveRelativeIRI` resolves an IRI against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative\n  _resolveRelativeIRI(iri) {\n    // An empty relative IRI indicates the base IRI\n    if (!iri.length)\n      return this._base;\n    // Decide resolving strategy based in the first character\n    switch (iri[0]) {\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return this._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      // Relative IRIs cannot contain a colon in the first path segment\n      return (/^[^/:]*:/.test(iri)) ? null : this._removeDotSegments(this._basePath + iri);\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986\n  _removeDotSegments(iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!/(^|\\/)\\.\\.?($|[/#?])/.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    const length = iri.length;\n    let result = '', i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return `${result}/${iri.substr(i + 1)}`;\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed quad through the callback\n  parse(input, quadCallback, prefixCallback) {\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._sparqlStyle = false;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = this._blankNodePrefix ? this._blankNodePrefix.substr(2)\n                                             : `b${blankNodePrefix++}_`;\n    this._prefixCallback = prefixCallback || noop;\n    this._inversePredicate = false;\n    this._quantified = Object.create(null);\n\n    // Parse synchronously if no quad callback is given\n    if (!quadCallback) {\n      const quads = [];\n      let error;\n      this._callback = (e, t) => { e ? (error = e) : t && quads.push(t); };\n      this._lexer.tokenize(input).every(token => {\n        return this._readCallback = this._readCallback(token);\n      });\n      if (error) throw error;\n      return quads;\n    }\n\n    // Parse asynchronously otherwise, executing the read callback when a token arrives\n    this._callback = quadCallback;\n    this._lexer.tokenize(input, (error, token) => {\n      if (error !== null)\n        this._callback(error), this._callback = noop;\n      else if (this._readCallback)\n        this._readCallback = this._readCallback(token);\n    });\n  }\n}\n\n// The empty function\nfunction noop() {}\n\n// Initializes the parser with the given data factory\nfunction initDataFactory(parser, factory) {\n  // Set factory methods\n  const namedNode = factory.namedNode;\n  parser._namedNode   = namedNode;\n  parser._blankNode   = factory.blankNode;\n  parser._literal     = factory.literal;\n  parser._variable    = factory.variable;\n  parser._quad        = factory.quad;\n  parser.DEFAULTGRAPH = factory.defaultGraph();\n\n  // Set common named nodes\n  parser.RDF_FIRST  = namedNode(namespaces.rdf.first);\n  parser.RDF_REST   = namedNode(namespaces.rdf.rest);\n  parser.RDF_NIL    = namedNode(namespaces.rdf.nil);\n  parser.N3_FORALL  = namedNode(namespaces.r.forAll);\n  parser.N3_FORSOME = namedNode(namespaces.r.forSome);\n  parser.ABBREVIATIONS = {\n    'a': namedNode(namespaces.rdf.type),\n    '=': namedNode(namespaces.owl.sameAs),\n    '>': namedNode(namespaces.log.implies),\n  };\n  parser.QUANTIFIERS_GRAPH = namedNode('urn:n3:quantifiers');\n}\ninitDataFactory(N3Parser.prototype, N3DataFactory);\n","// **N3Writer** writes N3 documents.\nimport namespaces from './IRIs';\nimport { default as N3DataFactory, Term } from './N3DataFactory';\nimport { isDefaultGraph } from './N3Util';\n\nconst DEFAULTGRAPH = N3DataFactory.defaultGraph();\n\nconst { rdf, xsd } = namespaces;\n\n// Characters in literals that require escaping\nconst escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapedCharacters = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n// ## Placeholder class to represent already pretty-printed terms\nclass SerializedTerm extends Term {\n  // Pretty-printed nodes are not equal to any other node\n  // (e.g., [] does not equal [])\n  equals() {\n    return false;\n  }\n}\n\n// ## Constructor\nexport default class N3Writer {\n  constructor(outputStream, options) {\n    // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n    this._prefixRegex = /$0^/;\n\n    // Shift arguments if the first argument is not a stream\n    if (outputStream && typeof outputStream.write !== 'function')\n      options = outputStream, outputStream = null;\n    options = options || {};\n    this._lists = options.lists;\n\n    // If no output stream given, send the output as string through the end callback\n    if (!outputStream) {\n      let output = '';\n      this._outputStream = {\n        write(chunk, encoding, done) { output += chunk; done && done(); },\n        end: done => { done && done(null, output); },\n      };\n      this._endStream = true;\n    }\n    else {\n      this._outputStream = outputStream;\n      this._endStream = options.end === undefined ? true : !!options.end;\n    }\n\n    // Initialize writer, depending on the format\n    this._subject = null;\n    if (!(/triple|quad/i).test(options.format)) {\n      this._lineMode = false;\n      this._graph = DEFAULTGRAPH;\n      this._baseIRI = options.baseIRI;\n      this._prefixIRIs = Object.create(null);\n      options.prefixes && this.addPrefixes(options.prefixes);\n    }\n    else {\n      this._lineMode = true;\n      this._writeQuad = this._writeQuadLine;\n    }\n  }\n\n  // ## Private methods\n\n  // ### Whether the current graph is the default graph\n  get _inDefaultGraph() {\n    return DEFAULTGRAPH.equals(this._graph);\n  }\n\n  // ### `_write` writes the argument to the output stream\n  _write(string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  }\n\n  // ### `_writeQuad` writes the quad to the output stream\n  _writeQuad(subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (!graph.equals(this._graph)) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._inDefaultGraph ? '.\\n' : '\\n}\\n')) +\n                    (DEFAULTGRAPH.equals(graph) ? '' : `${this._encodeIriOrBlank(graph)} {\\n`));\n        this._graph = graph;\n        this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (subject.equals(this._subject)) {\n        // Don't repeat the predicate if it's the same\n        if (predicate.equals(this._predicate))\n          this._write(`, ${this._encodeObject(object)}`, done);\n        // Same subject, different predicate\n        else\n          this._write(`;\\n    ${\n                      this._encodePredicate(this._predicate = predicate)} ${\n                      this._encodeObject(object)}`, done);\n      }\n      // Different subject; write the whole quad\n      else\n        this._write(`${(this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject)} ${\n                    this._encodePredicate(this._predicate = predicate)} ${\n                    this._encodeObject(object)}`, done);\n    }\n    catch (error) { done && done(error); }\n  }\n\n  // ### `_writeQuadLine` writes the quad to the output stream as a single line\n  _writeQuadLine(subject, predicate, object, graph, done) {\n    // Write the quad without prefixes\n    delete this._prefixMatch;\n    this._write(this.quadToString(subject, predicate, object, graph), done);\n  }\n\n  // ### `quadToString` serializes a quad as a string\n  quadToString(subject, predicate, object, graph) {\n    return  `${this._encodeSubject(subject)} ${\n            this._encodeIriOrBlank(predicate)} ${\n            this._encodeObject(object)\n            }${graph && graph.value ? ` ${this._encodeIriOrBlank(graph)} .\\n` : ' .\\n'}`;\n  }\n\n  // ### `quadsToString` serializes an array of quads as a string\n  quadsToString(quads) {\n    return quads.map(t => {\n      return this.quadToString(t.subject, t.predicate, t.object, t.graph);\n    }).join('');\n  }\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject(entity) {\n    return entity.termType === 'Quad' ?\n      this._encodeQuad(entity) : this._encodeIriOrBlank(entity);\n  }\n\n  // ### `_encodeIriOrBlank` represents an IRI or blank node\n  _encodeIriOrBlank(entity) {\n    // A blank node or list is represented as-is\n    if (entity.termType !== 'NamedNode') {\n      // If it is a list head, pretty-print it\n      if (this._lists && (entity.value in this._lists))\n        entity = this.list(this._lists[entity.value]);\n      return 'id' in entity ? entity.id : `_:${entity.value}`;\n    }\n    let iri = entity.value;\n    // Use relative IRIs if requested and possible\n    if (this._baseIRI && iri.startsWith(this._baseIRI))\n      iri = iri.substr(this._baseIRI.length);\n    // Escape special characters\n    if (escape.test(iri))\n      iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    const prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? `<${iri}>` :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  }\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral(literal) {\n    // Escape special characters\n    let value = literal.value;\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n\n    // Write a language-tagged literal\n    if (literal.language)\n      return `\"${value}\"@${literal.language}`;\n\n    // Write dedicated literals per data type\n    if (this._lineMode) {\n      // Only abbreviate strings in N-Triples or N-Quads\n      if (literal.datatype.value === xsd.string)\n        return `\"${value}\"`;\n    }\n    else {\n      // Use common datatype abbreviations in Turtle or TriG\n      switch (literal.datatype.value) {\n      case xsd.string:\n        return `\"${value}\"`;\n      case xsd.boolean:\n        if (value === 'true' || value === 'false')\n          return value;\n        break;\n      case xsd.integer:\n        if (/^[+-]?\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.decimal:\n        if (/^[+-]?\\d*\\.\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.double:\n        if (/^[+-]?(?:\\d+\\.\\d*|\\.?\\d+)[eE][+-]?\\d+$/.test(value))\n          return value;\n        break;\n      }\n    }\n\n    // Write a regular datatyped literal\n    return `\"${value}\"^^${this._encodeIriOrBlank(literal.datatype)}`;\n  }\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate(predicate) {\n    return predicate.value === rdf.type ? 'a' : this._encodeIriOrBlank(predicate);\n  }\n\n  // ### `_encodeObject` represents an object\n  _encodeObject(object) {\n    switch (object.termType) {\n    case 'Quad':\n      return this._encodeQuad(object);\n    case 'Literal':\n      return this._encodeLiteral(object);\n    default:\n      return this._encodeIriOrBlank(object);\n    }\n  }\n\n  // ### `_encodeQuad` encodes an RDF* quad\n  _encodeQuad({ subject, predicate, object, graph }) {\n    return `<<${\n      this._encodeSubject(subject)} ${\n      this._encodePredicate(predicate)} ${\n      this._encodeObject(object)}${\n      isDefaultGraph(graph) ? '' : ` ${this._encodeIriOrBlank(graph)}`}>>`;\n  }\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite() {\n    throw new Error('Cannot write because the writer has been closed.');\n  }\n\n  // ### `addQuad` adds the quad to the output stream\n  addQuad(subject, predicate, object, graph, done) {\n    // The quad was given as an object, so shift parameters\n    if (object === undefined)\n      this._writeQuad(subject.subject, subject.predicate, subject.object, subject.graph, predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph === 'function')\n      this._writeQuad(subject, predicate, object, DEFAULTGRAPH, graph);\n    // The `graph` parameter was provided\n    else\n      this._writeQuad(subject, predicate, object, graph || DEFAULTGRAPH, done);\n  }\n\n  // ### `addQuads` adds the quads to the output stream\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix(prefix, iri, done) {\n    const prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  }\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes(prefixes, done) {\n    // Ignore prefixes if not supported by the serialization\n    if (!this._prefixIRIs)\n      return done && done();\n\n    // Write all new prefixes\n    let hasPrefixes = false;\n    for (let prefix in prefixes) {\n      let iri = prefixes[prefix];\n      if (typeof iri !== 'string')\n        iri = iri.value;\n      hasPrefixes = true;\n      // Finish a possible pending quad\n      if (this._subject !== null) {\n        this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n        this._subject = null, this._graph = '';\n      }\n      // Store and write the prefix\n      this._prefixIRIs[iri] = (prefix += ':');\n      this._write(`@prefix ${prefix} <${iri}>.\\n`);\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      let IRIlist = '', prefixList = '';\n      for (const prefixIRI in this._prefixIRIs) {\n        IRIlist += IRIlist ? `|${prefixIRI}` : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + this._prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp(`^(?:${prefixList})[^\\/]*$|` +\n                                     `^(${IRIlist})([a-zA-Z][\\\\-_a-zA-Z0-9]*)$`);\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  }\n\n  // ### `blank` creates a blank node with the given content\n  blank(predicate, object) {\n    let children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(Term(\"predicate\"), Term(\"object\"))\n    else if (predicate.termType)\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return new SerializedTerm('[]');\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (!(child.object instanceof SerializedTerm))\n        return new SerializedTerm(`[ ${this._encodePredicate(child.predicate)} ${\n                                  this._encodeObject(child.object)} ]`);\n    // Generate a multi-triple or nested blank node\n    default:\n      let contents = '[';\n      // Write all triples in order\n      for (let i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate.equals(predicate))\n          contents += `, ${this._encodeObject(child.object)}`;\n        // Otherwise, write the predicate and the object\n        else {\n          contents += `${(i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate)} ${\n                      this._encodeObject(child.object)}`;\n          predicate = child.predicate;\n        }\n      }\n      return new SerializedTerm(`${contents}\\n]`);\n    }\n  }\n\n  // ### `list` creates a list node with the given content\n  list(elements) {\n    const length = elements && elements.length || 0, contents = new Array(length);\n    for (let i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return new SerializedTerm(`(${contents.join(' ')})`);\n  }\n\n  // ### `end` signals the end of the output stream\n  end(done) {\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    let singleDone = done && ((error, result) => { singleDone = null, done(error, result); });\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  }\n}\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  let result = escapedCharacters[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n","// **N3Store** objects store N3 quads by graph in memory.\nimport { default as N3DataFactory, termToId, termFromId } from './N3DataFactory';\nimport { Readable } from 'readable-stream';\nimport namespaces from './IRIs';\n\n// ## Constructor\nexport default class N3Store {\n  constructor(quads, options) {\n    // The number of quads is initially zero\n    this._size = 0;\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null);\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0;\n    this._ids = Object.create(null);\n    this._ids['><'] = 0; // dummy entry, so the first actual key is non-zero\n    this._entities = Object.create(null); // inverse of `_ids`\n    // `_blankNodeIndex` is the index of the last automatically named blank node\n    this._blankNodeIndex = 0;\n\n    // Shift parameters if `quads` is not given\n    if (!options && quads && !quads[0])\n      options = quads, quads = null;\n    options = options || {};\n    this._factory = options.factory || N3DataFactory;\n\n    // Add quads if passed\n    if (quads)\n      this.addQuads(quads);\n  }\n\n  // ## Public properties\n\n  // ### `size` returns the number of quads in the store\n  get size() {\n    // Return the quad count if if was cached\n    let size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0;\n    const graphs = this._graphs;\n    let subjects, subject;\n    for (const graphKey in graphs)\n      for (const subjectKey in (subjects = graphs[graphKey].subjects))\n        for (const predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex(index0, key0, key1, key2) {\n    // Create layers as necessary\n    const index1 = index0[key0] || (index0[key0] = {});\n    const index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signals the presence of the quad\n    const existed = key2 in index2;\n    if (!existed)\n      index2[key2] = null;\n    return !existed;\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex(index0, key0, key1, key2) {\n    // Remove the quad from the index\n    const index1 = index0[key0], index2 = index1[key1];\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty\n    for (const key in index2) return;\n    delete index1[key1];\n    for (const key in index1) return;\n    delete index0[key0];\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created quads.\n  // If `callback` is given, each result is passed through it\n  // and iteration halts when it returns truthy for any quad.\n  // If instead `array` is given, each result is added to the array.\n  _findInIndex(index0, key0, key1, key2, name0, name1, name2, graph, callback, array) {\n    let tmp, index1, index2;\n    // Depending on the number of variables, keys or reverse index are faster\n    const varCount = !key0 + !key1 + !key2,\n        entityKeys = varCount > 1 ? Object.keys(this._ids) : this._entities;\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      const entity0 = entityKeys[value0];\n\n      if (index1 = index0[value0]) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          const entity1 = entityKeys[value1];\n\n          if (index2 = index1[value1]) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            const values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create quads for all items found in index 2.\n            for (let l = 0; l < values.length; l++) {\n              const parts = { subject: null, predicate: null, object: null };\n              parts[name0] = termFromId(entity0, this._factory);\n              parts[name1] = termFromId(entity1, this._factory);\n              parts[name2] = termFromId(entityKeys[values[l]], this._factory);\n              const quad = this._factory.quad(\n                parts.subject, parts.predicate, parts.object, termFromId(graph, this._factory));\n              if (array)\n                array.push(quad);\n              else if (callback(quad))\n                return true;\n            }\n          }\n        }\n      }\n    }\n    return array;\n  }\n\n  // ### `_loop` executes the callback on all keys of index 0\n  _loop(index0, callback) {\n    for (const key0 in index0)\n      callback(key0);\n  }\n\n  // ### `_loopByKey0` executes the callback on all keys of a certain entry in index 0\n  _loopByKey0(index0, key0, callback) {\n    let index1, key1;\n    if (index1 = index0[key0]) {\n      for (key1 in index1)\n        callback(key1);\n    }\n  }\n\n  // ### `_loopByKey1` executes the callback on given keys of all entries in index 0\n  _loopByKey1(index0, key1, callback) {\n    let key0, index1;\n    for (key0 in index0) {\n      index1 = index0[key0];\n      if (index1[key1])\n        callback(key0);\n    }\n  }\n\n  // ### `_loopBy2Keys` executes the callback on given keys of certain entries in index 2\n  _loopBy2Keys(index0, key0, key1, callback) {\n    let index1, index2, key2;\n    if ((index1 = index0[key0]) && (index2 = index1[key1])) {\n      for (key2 in index2)\n        callback(key2);\n    }\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex(index0, key0, key1, key2) {\n    let count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      if (index1 = index0[value0]) {\n        // If a key is specified, count only that part of index 1\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the quad if it exists\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all quads\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs(graph) {\n    if (!isString(graph))\n      return this._graphs;\n    const graphs = {};\n    graphs[graph] = this._graphs[graph];\n    return graphs;\n  }\n\n  // ### `_uniqueEntities` returns a function that accepts an entity ID\n  // and passes the corresponding entity to callback if it hasn't occurred before.\n  _uniqueEntities(callback) {\n    const uniqueIds = Object.create(null);\n    return id => {\n      if (!(id in uniqueIds)) {\n        uniqueIds[id] = true;\n        callback(termFromId(this._entities[id], this._factory));\n      }\n    };\n  }\n\n  // ## Public methods\n\n  // ### `add` adds the specified quad to the dataset.\n  // Returns the dataset instance it was called on.\n  // Existing quads, as defined in Quad.equals, will be ignored.\n  add(quad) {\n    this.addQuad(quad);\n    return this;\n  }\n\n  // ### `addQuad` adds a new quad to the store.\n  // Returns if the quad index has changed, if the quad did not already exist.\n  addQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find the graph that will contain the triple\n    let graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    const ids = this._ids;\n    const entities = this._entities;\n    subject   = ids[subject]   || (ids[entities[++this._id] = subject]   = this._id);\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id);\n    object    = ids[object]    || (ids[entities[++this._id] = object]    = this._id);\n\n    const changed = this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached quad count is now invalid\n    this._size = null;\n    return changed;\n  }\n\n  // ### `addQuads` adds multiple quads to the store\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `delete` removes the specified quad from the dataset.\n  // Returns the dataset instance it was called on.\n  delete(quad) {\n    this.removeQuad(quad);\n    return this;\n  }\n\n  // ### `has` determines whether a dataset includes a certain quad.\n  // Returns true or false as appropriate.\n  has(quad) {\n    const quads = this.getQuads(quad.subject, quad.predicate, quad.object, quad.graph);\n    return quads.length !== 0;\n  }\n\n  // ### `import` adds a stream of quads to the store\n  import(stream) {\n    stream.on('data', quad => { this.addQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeQuad` removes a quad from the store if it exists\n  removeQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    const ids = this._ids, graphs = this._graphs;\n    let graphItem, subjects, predicates;\n    if (!(subject    = ids[subject]) || !(predicate = ids[predicate]) ||\n        !(object     = ids[object])  || !(graphItem = graphs[graph])  ||\n        !(subjects   = graphItem.subjects[subject]) ||\n        !(predicates = subjects[predicate]) ||\n        !(object in predicates))\n      return false;\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) return true;\n    delete graphs[graph];\n    return true;\n  }\n\n  // ### `removeQuads` removes multiple quads from the store\n  removeQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.removeQuad(quads[i]);\n  }\n\n  // ### `remove` removes a stream of quads from the store\n  remove(stream) {\n    stream.on('data', quad => { this.removeQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeMatches` removes all matching quads from the store\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  removeMatches(subject, predicate, object, graph) {\n    const stream = new Readable({ objectMode: true });\n\n    stream._read = () => {\n      for (const quad of this.getQuads(subject, predicate, object, graph))\n        stream.push(quad);\n      stream.push(null);\n    };\n\n    return this.remove(stream);\n  }\n\n  // ### `deleteGraph` removes all triples with the given graph from the store\n  deleteGraph(graph) {\n    return this.removeMatches(null, null, null, graph);\n  }\n\n  // ### `getQuads` returns an array of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const quads = [], graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return quads;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the object index will be the fastest\n            this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                              'object', 'subject', 'predicate', graphId, null, quads);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            this._findInIndex(content.subjects, subjectId, predicateId, null,\n                              'subject', 'predicate', 'object', graphId, null, quads);\n        }\n        else if (predicateId)\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          this._findInIndex(content.predicates, predicateId, objectId, null,\n                            'predicate', 'object', 'subject', graphId, null, quads);\n        else if (objectId)\n          // If only object is given, the object index will be the fastest\n          this._findInIndex(content.objects, objectId, null, null,\n                            'object', 'subject', 'predicate', graphId, null, quads);\n        else\n          // If nothing is given, iterate subjects and predicates first\n          this._findInIndex(content.subjects, null, null, null,\n                            'subject', 'predicate', 'object', graphId, null, quads);\n      }\n    }\n    return quads;\n  }\n\n  // ### `match` returns a new dataset that is comprised of all quads in the current instance matching the given arguments.\n  // The logic described in Quad Matching is applied for each quad in this dataset to check if it should be included in the output dataset.\n  // Note: This method always returns a new DatasetCore, even if that dataset contains no quads.\n  // Note: Since a DatasetCore is an unordered set, the order of the quads within the returned sequence is arbitrary.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  // For backwards compatibility, the object return also implements the Readable stream interface.\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this, subject, predicate, object, graph);\n  }\n\n  // ### `countQuads` returns the number of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  countQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let count = 0, content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return 0;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subject) {\n          if (object)\n            // If subject and object are given, the object index will be the fastest\n            count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            count += this._countInIndex(content.subjects, subjectId, predicateId, objectId);\n        }\n        else if (predicate) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          count += this._countInIndex(content.predicates, predicateId, objectId, subjectId);\n        }\n        else {\n          // If only object is possibly given, the object index will be the fastest\n          count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `forEach` executes the callback on all quads.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forEach(callback, subject, predicate, object, graph) {\n    this.some(quad => {\n      callback(quad);\n      return false;\n    }, subject, predicate, object, graph);\n  }\n\n  // ### `every` executes the callback on all quads,\n  // and returns `true` if it returns truthy for all them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  every(callback, subject, predicate, object, graph) {\n    let some = false;\n    const every = !this.some(quad => {\n      some = true;\n      return !callback(quad);\n    }, subject, predicate, object, graph);\n    return some && every;\n  }\n\n  // ### `some` executes the callback on all quads,\n  // and returns `true` if it returns truthy for any of them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  some(callback, subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return false;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId) {\n          // If subject and object are given, the object index will be the fastest\n            if (this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                                  'object', 'subject', 'predicate', graphId, callback, null))\n              return true;\n          }\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            if (this._findInIndex(content.subjects, subjectId, predicateId, null,\n                                  'subject', 'predicate', 'object', graphId, callback, null))\n              return true;\n        }\n        else if (predicateId) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          if (this._findInIndex(content.predicates, predicateId, objectId, null,\n                                'predicate', 'object', 'subject', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else if (objectId) {\n          // If only object is given, the object index will be the fastest\n          if (this._findInIndex(content.objects, objectId, null, null,\n                                'object', 'subject', 'predicate', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else\n        // If nothing is given, iterate subjects and predicates first\n        if (this._findInIndex(content.subjects, null, null, null,\n                              'subject', 'predicate', 'object', graphId, callback, null)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  // ### `getSubjects` returns all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getSubjects(predicate, object, graph) {\n    const results = [];\n    this.forSubjects(s => { results.push(s); }, predicate, object, graph);\n    return results;\n  }\n\n  // ### `forSubjects` executes the callback on all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forSubjects(callback, predicate, object, graph) {\n    // Convert terms to internal string representation\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, predicateId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (predicateId) {\n          if (objectId)\n            // If predicate and object are given, the POS index is best.\n            this._loopBy2Keys(content.predicates, predicateId, objectId, callback);\n          else\n            // If only predicate is given, the SPO index is best.\n            this._loopByKey1(content.subjects, predicateId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the OSP index is best.\n          this._loopByKey0(content.objects, objectId, callback);\n        else\n          // If no params given, iterate all the subjects\n          this._loop(content.subjects, callback);\n      }\n    }\n  }\n\n  // ### `getPredicates` returns all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getPredicates(subject, object, graph) {\n    const results = [];\n    this.forPredicates(p => { results.push(p); }, subject, object, graph);\n    return results;\n  }\n\n  // ### `forPredicates` executes the callback on all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forPredicates(callback, subject, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject) && !(subjectId = ids[subject]) ||\n        isString(object)  && !(objectId  = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the OSP index is best.\n            this._loopBy2Keys(content.objects, objectId, subjectId, callback);\n          else\n            // If only subject is given, the SPO index is best.\n            this._loopByKey0(content.subjects, subjectId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the POS index is best.\n          this._loopByKey1(content.predicates, objectId, callback);\n        else\n          // If no params given, iterate all the predicates.\n          this._loop(content.predicates, callback);\n      }\n    }\n  }\n\n  // ### `getObjects` returns all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getObjects(subject, predicate, graph) {\n    const results = [];\n    this.forObjects(o => { results.push(o); }, subject, predicate, graph);\n    return results;\n  }\n\n  // ### `forObjects` executes the callback on all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forObjects(callback, subject, predicate, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, predicateId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject]) ||\n        isString(predicate) && !(predicateId = ids[predicate]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (predicateId)\n            // If subject and predicate are given, the SPO index is best.\n            this._loopBy2Keys(content.subjects, subjectId, predicateId, callback);\n          else\n            // If only subject is given, the OSP index is best.\n            this._loopByKey1(content.objects, subjectId, callback);\n        }\n        else if (predicateId)\n          // If only predicate is given, the POS index is best.\n          this._loopByKey0(content.predicates, predicateId, callback);\n        else\n          // If no params given, iterate all the objects.\n          this._loop(content.objects, callback);\n      }\n    }\n  }\n\n  // ### `getGraphs` returns all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getGraphs(subject, predicate, object) {\n    const results = [];\n    this.forGraphs(g => { results.push(g); }, subject, predicate, object);\n    return results;\n  }\n\n  // ### `forGraphs` executes the callback on all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forGraphs(callback, subject, predicate, object) {\n    for (const graph in this._graphs) {\n      this.some(quad => {\n        callback(quad.graph);\n        return true; // Halt iteration of some()\n      }, subject, predicate, object, graph);\n    }\n  }\n\n  // ### `createBlankNode` creates a new blank node, returning its name\n  createBlankNode(suggestedName) {\n    let name, index;\n    // Generate a name based on the suggested name\n    if (suggestedName) {\n      name = suggestedName = `_:${suggestedName}`, index = 1;\n      while (this._ids[name])\n        name = suggestedName + index++;\n    }\n    // Generate a generic blank node name\n    else {\n      do { name = `_:b${this._blankNodeIndex++}`; }\n      while (this._ids[name]);\n    }\n    // Add the blank node to the entities, avoiding the generation of duplicates\n    this._ids[name] = ++this._id;\n    this._entities[this._id] = name;\n    return this._factory.blankNode(name.substr(2));\n  }\n\n  // ### `extractLists` finds and removes all list triples\n  // and returns the items per list.\n  extractLists({ remove = false, ignoreErrors = false } = {}) {\n    const lists = {}; // has scalar keys so could be a simple Object\n    const onError = ignoreErrors ? (() => true) :\n                  ((node, message) => { throw new Error(`${node.value} ${message}`); });\n\n    // Traverse each list from its tail\n    const tails = this.getQuads(null, namespaces.rdf.rest, namespaces.rdf.nil, null);\n    const toRemove = remove ? [...tails] : [];\n    tails.forEach(tailQuad => {\n      const items = [];             // the members found as objects of rdf:first quads\n      let malformed = false;      // signals whether the current list is malformed\n      let head;                   // the head of the list (_:b1 in above example)\n      let headPos;                // set to subject or object when head is set\n      const graph = tailQuad.graph; // make sure list is in exactly one graph\n\n      // Traverse the list from tail to end\n      let current = tailQuad.subject;\n      while (current && !malformed) {\n        const objectQuads = this.getQuads(null, null, current, null);\n        const subjectQuads = this.getQuads(current, null, null, null);\n        let quad, first = null, rest = null, parent = null;\n\n        // Find the first and rest of this list node\n        for (let i = 0; i < subjectQuads.length && !malformed; i++) {\n          quad = subjectQuads[i];\n          if (!quad.graph.equals(graph))\n            malformed = onError(current, 'not confined to single graph');\n          else if (head)\n            malformed = onError(current, 'has non-list arcs out');\n\n          // one rdf:first\n          else if (quad.predicate.value === namespaces.rdf.first) {\n            if (first)\n              malformed = onError(current, 'has multiple rdf:first arcs');\n            else\n              toRemove.push(first = quad);\n          }\n\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (rest)\n              malformed = onError(current, 'has multiple rdf:rest arcs');\n            else\n              toRemove.push(rest = quad);\n          }\n\n          // alien triple\n          else if (objectQuads.length)\n            malformed = onError(current, 'can\\'t be subject and object');\n          else {\n            head = quad; // e.g. { (1 2 3) :p :o }\n            headPos = 'subject';\n          }\n        }\n\n        // { :s :p (1 2) } arrives here with no head\n        // { (1 2) :p :o } arrives here with head set to the list.\n        for (let i = 0; i < objectQuads.length && !malformed; ++i) {\n          quad = objectQuads[i];\n          if (head)\n            malformed = onError(current, 'can\\'t have coreferences');\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (parent)\n              malformed = onError(current, 'has incoming rdf:rest arcs');\n            else\n              parent = quad;\n          }\n          else {\n            head = quad; // e.g. { :s :p (1 2) }\n            headPos = 'object';\n          }\n        }\n\n        // Store the list item and continue with parent\n        if (!first)\n          malformed = onError(current, 'has no list head');\n        else\n          items.unshift(first.object);\n        current = parent && parent.subject;\n      }\n\n      // Don't remove any quads if the list is malformed\n      if (malformed)\n        remove = false;\n      // Store the list under the value of its head\n      else if (head)\n        lists[head[headPos].value] = items;\n    });\n\n    // Remove list quads if requested\n    if (remove)\n      this.removeQuads(toRemove);\n    return lists;\n  }\n\n  // ### Store is an iterable.\n  // Can be used where iterables are expected: for...of loops, array spread operator,\n  // `yield*`, and destructuring assignment (order is not guaranteed).\n  *[Symbol.iterator]() {\n    yield* this.getQuads();\n  }\n}\n\n// Determines whether the argument is a string\nfunction isString(s) {\n  return typeof s === 'string' || s instanceof String;\n}\n\n/**\n * A class that implements both DatasetCore and Readable.\n */\nclass DatasetCoreAndReadableStream extends Readable {\n  constructor(n3Store, subject, predicate, object, graph) {\n    super({ objectMode: true });\n    Object.assign(this, { n3Store, subject, predicate, object, graph });\n  }\n\n  get filtered() {\n    if (!this._filtered) {\n      const { n3Store, graph, object, predicate, subject } = this;\n      const quads = n3Store.getQuads(subject, predicate, object, graph);\n      this._filtered = new N3Store(quads, { factory: n3Store._factory });\n    }\n    return this._filtered;\n  }\n\n  _read() {\n    for (const quad of this.filtered.getQuads())\n      this.push(quad);\n    this.push(null);\n  }\n\n  add(quad) {\n    return this.filtered.add(quad);\n  }\n\n  delete(quad) {\n    return this.filtered.delete(quad);\n  }\n\n  has(quad) {\n    return this.filtered.has(quad);\n  }\n\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this.filtered, subject, predicate, object, graph);\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.filtered.getQuads();\n  }\n}\n","// **N3StreamParser** parses a text stream into a quad stream.\nimport N3Parser from './N3Parser';\nimport { Transform } from 'readable-stream';\n\n// ## Constructor\nexport default class N3StreamParser extends Transform {\n  constructor(options) {\n    super({ decodeStrings: true });\n    this._readableState.objectMode = true;\n\n    // Set up parser with dummy stream to obtain `data` and `end` callbacks\n    const parser = new N3Parser(options);\n    let onData, onEnd;\n    parser.parse({\n      on: (event, callback) => {\n        switch (event) {\n        case 'data': onData = callback; break;\n        case 'end':   onEnd = callback; break;\n        }\n      },\n    },\n      // Handle quads by pushing them down the pipeline\n      (error, quad) => { error && this.emit('error', error) || quad && this.push(quad); },\n      // Emit prefixes through the `prefix` event\n      (prefix, uri) => { this.emit('prefix', prefix, uri); }\n    );\n\n    // Implement Transform methods through parser callbacks\n    this._transform = (chunk, encoding, done) => { onData(chunk); done(); };\n    this._flush = done => { onEnd(); done(); };\n  }\n\n  // ### Parses a stream of strings\n  import(stream) {\n    stream.on('data',  chunk => { this.write(chunk); });\n    stream.on('end',   ()      => { this.end(); });\n    stream.on('error', error => { this.emit('error', error); });\n    return this;\n  }\n}\n","// **N3StreamWriter** serializes a quad stream into a text stream.\nimport { Transform } from 'readable-stream';\nimport N3Writer from './N3Writer';\n\n// ## Constructor\nexport default class N3StreamWriter extends Transform {\n  constructor(options) {\n    super({ encoding: 'utf8', writableObjectMode: true });\n\n    // Set up writer with a dummy stream object\n    const writer = this._writer = new N3Writer({\n      write: (quad, encoding, callback) => { this.push(quad); callback && callback(); },\n      end: callback => { this.push(null); callback && callback(); },\n    }, options);\n\n    // Implement Transform methods on top of writer\n    this._transform = (quad, encoding, done) => { writer.addQuad(quad, done); };\n    this._flush = done => { writer.end(done); };\n  }\n\n// ### Serializes a stream of quads\n  import(stream) {\n    stream.on('data',   quad => { this.write(quad); });\n    stream.on('end',    () => { this.end(); });\n    stream.on('error',  error => { this.emit('error', error); });\n    stream.on('prefix', (prefix, iri) => { this._writer.addPrefix(prefix, iri); });\n    return this;\n  }\n}\n","module.exports = require('events').EventEmitter;\n","// **N3Lexer** tokenizes N3 documents.\nimport namespaces from './IRIs';\nimport queueMicrotask from 'queue-microtask';\n\nconst { xsd } = namespaces;\n\n// Regular expression and replacement string to escape N3 strings\nconst escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\([^])/g;\nconst escapeReplacements = {\n  '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n  'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n  '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n  '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n  '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n};\nconst illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\nconst lineModeRegExps = {\n  _iri: true,\n  _unescapedIri: true,\n  _simpleQuotedString: true,\n  _langcode: true,\n  _blank: true,\n  _newline: true,\n  _comment: true,\n  _whitespace: true,\n  _endOfFile: true,\n};\nconst invalidRegExp = /$0^/;\n\n// ## Constructor\nexport default class N3Lexer {\n  constructor(options) {\n    // ## Regular expressions\n    // It's slightly faster to have these as properties than as in-scope variables\n    this._iri = /^<((?:[^ <>{}\\\\]|\\\\[uU])+)>[ \\t]*/; // IRI with escape sequences; needs sanity check after unescaping\n    this._unescapedIri = /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>[ \\t]*/; // IRI without escape sequences; no unescaping\n    this._simpleQuotedString = /^\"([^\"\\\\\\r\\n]*)\"(?=[^\"])/; // string without escape sequences\n    this._simpleApostropheString = /^'([^'\\\\\\r\\n]*)'(?=[^'])/;\n    this._langcode = /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i;\n    this._prefix = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/;\n    this._prefixed = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?:[ \\t]+|(?=\\.?[,;!\\^\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._variable = /^\\?(?:(?:[A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=[.,;!\\^\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._blank = /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?:[ \\t]+|(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._number = /^[\\-+]?(?:(\\d+\\.\\d*|\\.?\\d+)[eE][\\-+]?|\\d*(\\.)?)\\d+(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._boolean = /^(?:true|false)(?=[.,;\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._keyword = /^@[a-z]+(?=[\\s#<:])/i;\n    this._sparqlKeyword = /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<])/i;\n    this._shortPredicates = /^a(?=[\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._newline = /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/;\n    this._comment = /#([^\\n\\r]*)/;\n    this._whitespace = /^[ \\t]+/;\n    this._endOfFile = /^(?:#[^\\n\\r]*)?$/;\n    options = options || {};\n\n    // In line mode (N-Triples or N-Quads), only simple features may be parsed\n    if (this._lineMode = !!options.lineMode) {\n      this._n3Mode = false;\n      // Don't tokenize special literals\n      for (const key in this) {\n        if (!(key in lineModeRegExps) && this[key] instanceof RegExp)\n          this[key] = invalidRegExp;\n      }\n    }\n    // When not in line mode, enable N3 functionality by default\n    else {\n      this._n3Mode = options.n3 !== false;\n    }\n    // Don't output comment tokens by default\n    this._comments = !!options.comments;\n    // Cache the last tested closing position of long literals\n    this._literalClosingPos = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback\n  _tokenizeToEnd(callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually\n    let input = this._input;\n    const outputComments = this._comments;\n    while (true) {\n      // Count and skip whitespace lines\n      let whiteSpaceMatch, comment;\n      while (whiteSpaceMatch = this._newline.exec(input)) {\n        // Try to find a comment\n        if (outputComments && (comment = this._comment.exec(whiteSpaceMatch[0])))\n          callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n        // Advance the input\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n        this._line++;\n      }\n      // Skip whitespace on current line\n      if (!whiteSpaceMatch && (whiteSpaceMatch = this._whitespace.exec(input)))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF\n        if (inputFinished) {\n          // Try to find a final comment\n          if (outputComments && (comment = this._comment.exec(input)))\n            callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n          callback(input = null, { line: this._line, type: 'eof', value: '', prefix: '' });\n        }\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character\n      const line = this._line, firstChar = input[0];\n      let type = '', value = '', prefix = '',\n          match = null, matchLength = 0, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // We need at least 3 tokens lookahead to distinguish ^^<IRI> and ^^pre:fixed\n        if (input.length < 3)\n          break;\n        // Try to match a type\n        else if (input[1] === '^') {\n          this._previousMarker = '^^';\n          // Move to type IRI or prefixed name\n          input = input.substr(2);\n          if (input[0] !== '<') {\n            inconclusive = true;\n            break;\n          }\n        }\n        // If no type, it must be a path expression\n        else {\n          if (this._n3Mode) {\n            matchLength = 1;\n            type = '^';\n          }\n          break;\n        }\n        // Fall through in case the type is an IRI\n      case '<':\n        // Try to find a full IRI without escape sequences\n        if (match = this._unescapedIri.exec(input))\n          type = 'IRI', value = match[1];\n        // Try to find a full IRI with escape sequences\n        else if (match = this._iri.exec(input)) {\n          value = this._unescape(match[1]);\n          if (value === null || illegalIriChars.test(value))\n            return reportSyntaxError(this);\n          type = 'IRI';\n        }\n        // Try to find a nested triple\n        else if (input.length > 1 && input[1] === '<')\n          type = '<<', matchLength = 2;\n        // Try to find a backwards implication arrow\n        else if (this._n3Mode && input.length > 1 && input[1] === '=')\n          type = 'inverse', matchLength = 2, value = '>';\n        break;\n\n      case '>':\n        if (input.length > 1 && input[1] === '>')\n          type = '>>', matchLength = 2;\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a blank node.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(`${input} `)))\n          type = 'blank', prefix = '_', value = match[1];\n        break;\n\n      case '\"':\n        // Try to find a literal without escape sequences\n        if (match = this._simpleQuotedString.exec(input))\n          value = match[1];\n        // Try to find a literal wrapped in three pairs of quotes\n        else {\n          ({ value, matchLength } = this._parseLiteral(input));\n          if (value === null)\n            return reportSyntaxError(this);\n        }\n        if (match !== null || matchLength !== 0) {\n          type = 'literal';\n          this._literalClosingPos = 0;\n        }\n        break;\n\n      case \"'\":\n        if (!this._lineMode) {\n          // Try to find a literal without escape sequences\n          if (match = this._simpleApostropheString.exec(input))\n            value = match[1];\n          // Try to find a literal wrapped in three pairs of quotes\n          else {\n            ({ value, matchLength } = this._parseLiteral(input));\n            if (value === null)\n              return reportSyntaxError(this);\n          }\n          if (match !== null || matchLength !== 0) {\n            type = 'literal';\n            this._literalClosingPos = 0;\n          }\n        }\n        break;\n\n      case '?':\n        // Try to find a variable\n        if (this._n3Mode && (match = this._variable.exec(input)))\n          type = 'var', value = match[0];\n        break;\n\n      case '@':\n        // Try to find a language code\n        if (this._previousMarker === 'literal' && (match = this._langcode.exec(input)))\n          type = 'langcode', value = match[1];\n        // Try to find a keyword\n        else if (match = this._keyword.exec(input))\n          type = match[0];\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot)\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a number.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if (match = this._number.exec(input) ||\n            inputFinished && (match = this._number.exec(`${input} `))) {\n          type = 'literal', value = match[0];\n          prefix = (typeof match[1] === 'string' ? xsd.double :\n                    (typeof match[2] === 'string' ? xsd.decimal : xsd.integer));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean\n        if (match = this._boolean.exec(input))\n          type = 'literal', value = match[0], prefix = xsd.boolean;\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate\n        if (match = this._shortPredicates.exec(input))\n          type = 'abbreviation', value = 'a';\n        else\n          inconclusive = true;\n        break;\n\n      case '=':\n        // Try to find an implication arrow or equals sign\n        if (this._n3Mode && input.length > 1) {\n          type = 'abbreviation';\n          if (input[1] !== '>')\n            matchLength = 1, value = '=';\n          else\n            matchLength = 2, value = '>';\n        }\n        break;\n\n      case '!':\n        if (!this._n3Mode)\n          break;\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '{':\n      case '}':\n        if (!this._lineMode) {\n          matchLength = 1;\n          type = firstChar;\n        }\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more\n      if (inconclusive) {\n        // Try to find a prefix\n        if ((this._previousMarker === '@prefix' || this._previousMarker === 'PREFIX') &&\n            (match = this._prefix.exec(input)))\n          type = 'prefix', value = match[1] || '';\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(`${input} `)))\n          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read\n      if (this._previousMarker === '^^') {\n        switch (type) {\n        case 'prefixed': type = 'type';    break;\n        case 'IRI':      type = 'typeIRI'; break;\n        default:         type = '';\n        }\n      }\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token\n      const token = { line: line, type: type, value: value, prefix: prefix };\n      callback(null, token);\n      this.previousToken = token;\n      this._previousMarker = type;\n      // Advance to next part to tokenize\n      input = input.substr(matchLength || match[0].length, input.length);\n    }\n\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  }\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters\n  _unescape(item) {\n    let invalid = false;\n    const replaced = item.replace(escapeSequence, (sequence, unicode4, unicode8, escapedChar) => {\n      // 4-digit unicode character\n      if (typeof unicode4 === 'string')\n        return String.fromCharCode(Number.parseInt(unicode4, 16));\n      // 8-digit unicode character\n      if (typeof unicode8 === 'string') {\n        let charCode = Number.parseInt(unicode8, 16);\n        return charCode <= 0xFFFF ? String.fromCharCode(Number.parseInt(unicode8, 16)) :\n          String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n      }\n      // fixed escape sequence\n      if (escapedChar in escapeReplacements)\n        return escapeReplacements[escapedChar];\n      // invalid escape sequence\n      invalid = true;\n      return '';\n    });\n    return invalid ? null : replaced;\n  }\n\n  // ### `_parseLiteral` parses a literal into an unescaped value\n  _parseLiteral(input) {\n    // Ensure we have enough lookahead to identify triple-quoted strings\n    if (input.length >= 3) {\n      // Identify the opening quote(s)\n      const opening = input.match(/^(?:\"\"\"|\"|'''|'|)/)[0];\n      const openingLength = opening.length;\n\n      // Find the next candidate closing quotes\n      let closingPos = Math.max(this._literalClosingPos, openingLength);\n      while ((closingPos = input.indexOf(opening, closingPos)) > 0) {\n        // Count backslashes right before the closing quotes\n        let backslashCount = 0;\n        while (input[closingPos - backslashCount - 1] === '\\\\')\n          backslashCount++;\n\n        // An even number of backslashes (in particular 0)\n        // means these are actual, non-escaped closing quotes\n        if (backslashCount % 2 === 0) {\n          // Extract and unescape the value\n          const raw = input.substring(openingLength, closingPos);\n          const lines = raw.split(/\\r\\n|\\r|\\n/).length - 1;\n          const matchLength = closingPos + openingLength;\n          // Only triple-quoted strings can be multi-line\n          if (openingLength === 1 && lines !== 0 ||\n              openingLength === 3 && this._lineMode)\n            break;\n          this._line += lines;\n          return { value: this._unescape(raw), matchLength };\n        }\n        closingPos++;\n      }\n      this._literalClosingPos = input.length - openingLength + 1;\n    }\n    return { value: '', matchLength: 0 };\n  }\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError(issue) {\n    this._input = null;\n    const err = new Error(`Unexpected \"${issue}\" on line ${this._line}.`);\n    err.context = {\n      token: undefined,\n      line: this._line,\n      previousToken: this.previousToken,\n    };\n    return err;\n  }\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize(input, callback) {\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end\n    if (typeof input === 'string') {\n      this._input = input;\n      // If a callback was passed, asynchronously call it\n      if (typeof callback === 'function')\n        queueMicrotask(() => this._tokenizeToEnd(callback, true));\n      // If no callback was passed, tokenize synchronously and return\n      else {\n        const tokens = [];\n        let error;\n        this._tokenizeToEnd((e, t) => e ? (error = e) : tokens.push(t), true);\n        if (error) throw error;\n        return tokens;\n      }\n    }\n    // Otherwise, the input must be a stream\n    else {\n      this._input = '';\n      this._pendingBuffer = null;\n      if (typeof input.setEncoding === 'function')\n        input.setEncoding('utf8');\n      // Adds the data chunk to the buffer and parses as far as possible\n      input.on('data', data => {\n        if (this._input !== null && data.length !== 0) {\n          // Prepend any previous pending writes\n          if (this._pendingBuffer) {\n            data = Buffer.concat([this._pendingBuffer, data]);\n            this._pendingBuffer = null;\n          }\n          // Hold if the buffer ends in an incomplete unicode sequence\n          if (data[data.length - 1] & 0x80) {\n            this._pendingBuffer = data;\n          }\n          // Otherwise, tokenize as far as possible\n          else {\n            this._input += data;\n            this._tokenizeToEnd(callback, false);\n          }\n        }\n      });\n      // Parses until the end\n      input.on('end', () => {\n        if (this._input !== null)\n          this._tokenizeToEnd(callback, true);\n      });\n      input.on('error', callback);\n    }\n  }\n}\n","const RDF  = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    XSD  = 'http://www.w3.org/2001/XMLSchema#',\n    SWAP = 'http://www.w3.org/2000/10/swap/';\n\nexport default {\n  xsd: {\n    decimal: `${XSD}decimal`,\n    boolean: `${XSD}boolean`,\n    double:  `${XSD}double`,\n    integer: `${XSD}integer`,\n    string:  `${XSD}string`,\n  },\n  rdf: {\n    type:       `${RDF}type`,\n    nil:        `${RDF}nil`,\n    first:      `${RDF}first`,\n    rest:       `${RDF}rest`,\n    langString: `${RDF}langString`,\n  },\n  owl: {\n    sameAs: 'http://www.w3.org/2002/07/owl#sameAs',\n  },\n  r: {\n    forSome: `${SWAP}reify#forSome`,\n    forAll:  `${SWAP}reify#forAll`,\n  },\n  log: {\n    implies: `${SWAP}log#implies`,\n  },\n};\n"],"sourceRoot":""}